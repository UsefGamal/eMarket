@model eMarket.Models.ProductAddModel
@{
    ViewBag.Title = "Add Product";
    Layout = "~/Views/_LayoutPage.cshtml";
}

@using (Html.BeginForm("AddProduct", "Market", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return AjaxPost(this)" }))
{
    @Html.AntiForgeryToken()
    @*<form id="AddProduct" method="post" enctype="multipart/form-data" onsubmit="return AjaxPost(this)" >*@
    <div class="form-horizontal userProfile">
        <h3>Product</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2"> Upload Image</label>
            <div class="col-md-10">
                <label class=" btn btn-primary btn-File">
                    <input type="file" id="file" name="file" style="width:100%;" />
                </label>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descripition, new { htmlAttributes = new { @class = "form-control", @style = "max-width: 902px;min - width: 902px; " } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategryId, "CategryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-light btn-success"> Add </button>
            </div>
        </div>
    </div>

}



<script>
    function AjaxPost(formData) {
        var ajaxConfig = {
            type: "POST",
            url: "/Categories/AddProduct",
            data: new FormData(formData),
            success: function (result) {
                alert(result);
                window.location.href = "/Categories/AddProduct"
            }
        }
        if ($(formData).attr('enctype') == "multipart/form-data") {
            ajaxConfig["contentType"] = false;
            ajaxConfig["processData"] = false;
        }
        $.ajax(ajaxConfig);
        return false;
    }
</script>